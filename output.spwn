// Automatically generated helper functions
_scgt_mul = (n: @number, v) => match v.type {
    in [@array, @number, @string]: n * v,
    in [@group, @color, @item, @block]: v.type(n * @number(v)),
    == @bool: n * @number(v)
    else: v
}

// Initialize variables used
let _scgt_loop_3 = null
let _scgt_loop_4 = null

// L(L$TL1F
while true {
    // (L$TL1F
    $.print(() {
        // L$TL1F
        return () {
            let _scgt_loop_3 = []
            while true {
                // $T
                $.print(true)
                // L1F
                _scgt_loop_3.push(() {
                    let _scgt_loop_4 = []
                    while true {
                        // 1F
                        _scgt_loop_4.push(_scgt_mul(1, false))
                    }
                    return _scgt_loop_4
                } ())
            }
            return _scgt_loop_3
        } ()
    } ())
}
