// Automatically generated helper functions
_scgt_invert = (v) => match v.type {
    == @number: -v,
    == @bool: !v,
    in [@string, @array]: v.reverse(),
    else: v
}

// Initialize variables used
let _scgt_loop_5 = null

// M}$!L(`se"\"x`A
$.print(() {
    // }$!L(`se"\"x`A
    return !{
        // $!L(`se"\"x`A
        $.print(_scgt_invert(() {
            let _scgt_loop_5 = []
            while true {
                // (`se"\"x`A
                _scgt_loop_5.push(() {
                    // `se"\"x`
                    $.print("se\"\\\"x")
                    // A
                    return []
                } ())
            }
            return _scgt_loop_5
        } ()))
    }
})
